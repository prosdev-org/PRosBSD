cmake_minimum_required(VERSION 3.15)

include(cfg/config.cmake)

project(PRosBSD LANGUAGES C ASM VERSION 0.1.0)
set(PROJECT_VERSION_SUFFIX "-dev")

set(PROJECT_VERSION_FULL "${PROJECT_VERSION}${PROJECT_VERSION_SUFFIX}")
message(STATUS "${PROJECT_NAME} v.${PROJECT_VERSION_FULL}")

file(WRITE "${CMAKE_BINARY_DIR}/include/generated/version.h" "// This file is automatically generated, do not touch it. To bump version edit CMakeLists.txt.
#ifndef VERSION_H
#define VERSION_H

#define VERSION_MAJOR ${PROJECT_VERSION_MAJOR}
#define VERSION_MINOR ${PROJECT_VERSION_MINOR}
#define VERSION_PATCH ${PROJECT_VERSION_PATCH}
#define VERSION_SUFFIX \"${PROJECT_VERSION_SUFFIX}\"
#define VERSION_STRING \"${PROJECT_VERSION_FULL}\"

#endif
")

file(WRITE "${CMAKE_BINARY_DIR}/version" "${PROJECT_VERSION_FULL}")

add_subdirectory(kernel)

add_custom_target(image
        DEPENDS KERNEL.BIN
        COMMAND dd if=/dev/zero of=${IMAGES_TEMP_STORAGE_PATH}/${IMAGE_NAME} count=2880 bs=512
        COMMAND mkfs.fat -F 12 ${IMAGES_TEMP_STORAGE_PATH}/${IMAGE_NAME}
        COMMAND dd if=${CMAKE_CURRENT_BINARY_DIR}/kernel/boot/MBR.BIN of=${IMAGES_TEMP_STORAGE_PATH}/${IMAGE_NAME} conv=notrunc
        COMMAND mcopy -i ${IMAGES_TEMP_STORAGE_PATH}/${IMAGE_NAME} ${CMAKE_CURRENT_BINARY_DIR}/kernel/boot/SETUP.BIN ::/
        COMMAND mcopy -i ${IMAGES_TEMP_STORAGE_PATH}/${IMAGE_NAME} ${CMAKE_CURRENT_BINARY_DIR}/kernel/KERNEL.BIN ::/
        COMMENT "Building floppy image fd.img"
)

add_custom_target(hdd_image ALL
        COMMAND cp ${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} ${CMAKE_CURRENT_BINARY_DIR}/${HARD_IMAGE_NAME}
        COMMAND ln -sf ${HARD_IMAGE_NAME} ${CMAKE_CURRENT_BINARY_DIR}/${HARD_IMAGE_LINK_NAME}
)

if (ISGRUBQ)
    # add_dependencies(hdd_image hdd_image_grub)
else ()
    add_dependencies(hdd_image hdd_image_syslinux)
endif ()

# add_custom_target(hdd_image_grub
#     DEPENDS image
# )

add_custom_target(hdd_image_syslinux
        DEPENDS image
        COMMAND dd if=/dev/zero of=${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} bs=1M count=70
        COMMAND dd if=/dev/zero of=${IMAGES_TEMP_STORAGE_PATH}/1.img bs=1M count=33
        COMMAND dd if=/dev/zero of=${IMAGES_TEMP_STORAGE_PATH}/2.img bs=1M count=34
        COMMAND parted -s ${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} mklabel msdos
        COMMAND parted -s ${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} mkpart primary 1MiB 34MiB
        COMMAND parted -s ${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} mkpart primary 35MiB 69MiB
        COMMAND mkfs.fat -F 32 ${IMAGES_TEMP_STORAGE_PATH}/1.img
        COMMAND mkfs.ext2 ${IMAGES_TEMP_STORAGE_PATH}/2.img
        COMMAND mcopy -i ${IMAGES_TEMP_STORAGE_PATH}/1.img ${MEMDISK_PATH} ::/memdisk
        COMMAND mcopy -i ${IMAGES_TEMP_STORAGE_PATH}/1.img ${IMAGES_TEMP_STORAGE_PATH}/${IMAGE_NAME} ::/fd.img
        COMMAND parted -s ${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} set 1 boot on
        COMMAND mcopy -i ${IMAGES_TEMP_STORAGE_PATH}/1.img ${CMAKE_CURRENT_SOURCE_DIR}/cfg/syslinux.cfg ::/syslinux.cfg
        COMMAND syslinux --install ${IMAGES_TEMP_STORAGE_PATH}/1.img
        COMMAND dd if=${IMAGES_TEMP_STORAGE_PATH}/1.img of=${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} bs=1M seek=1 conv=notrunc
        COMMAND dd if=${IMAGES_TEMP_STORAGE_PATH}/2.img of=${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} bs=1M seek=35 conv=notrunc
        COMMAND parted -s ${IMAGES_TEMP_STORAGE_PATH}/${HARD_IMAGE_NAME} unit B print
        COMMENT "Building hard disk image (syslinux)"
)
